apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-cluster.fullname" . }}
  namespace: {{ .Values.namespace | default "redis" }}
  labels:
    {{- include "redis-cluster.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "redis-cluster.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis-cluster.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "redis-cluster.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "redis-server"
          {{- if .Values.cluster.enabled }}
            - "--cluster-enabled"
            - "yes"
            - "--cluster-config-file"
            - "/data/nodes.conf"
            - "--cluster-node-timeout"
            - "{{ .Values.cluster.nodeTimeout }}"
          {{- end }}
            - "--appendonly"
            - "yes"
            - "--maxmemory"
            - "{{ .Values.config.maxmemory }}"
            - "--maxmemory-policy"
            - "{{ .Values.config.maxmemoryPolicy }}"
          ports:
            - name: redis
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
