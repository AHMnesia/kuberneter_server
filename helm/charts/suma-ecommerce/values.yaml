replicaCount: 2
revisionHistoryLimit: 3

namespace: suma-ecommerce

image:
  repository: suma-ecommerce-api
  tag: latest
  pullPolicy: Never

command: ['php', 'artisan', 'serve', '--host=0.0.0.0', '--port=8000']
workingDir: /var/www/html

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

env:
  APP_ENV: "production"
  APP_DEBUG: "false"

resources:
  requests:
    memory: "256Mi"
    cpu: "200m"
    ephemeral-storage: "500Mi"
  limits:
    memory: "1Gi"
    cpu: "800m"
    ephemeral-storage: "2Gi"

# Application Configuration
config:
  appName: "Suma E-commerce API"
  appEnv: production
  appDebug: false
  appUrl: "https://api.suma-honda.id"
  dbConnection: mysql
  cacheDriver: redis
  queueConnection: redis
  elasticsearchHosts: "https://suma-platform-elasticsearch:9200"

# Database Configuration
database:
  host: localhost
  port: 3306
  name: suma_ecommerce
  username: root
  password: password

startupProbe:
  enabled: true
  path: /
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 30

livenessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 3

# Persistence
persistence:
  enabled: true
  volumes:
    - name: storage
      size: 2Gi
      mountPath: /var/www/html/storage
      storageClassName: standard
      accessModes:
        - ReadWriteOnce
    - name: uploads
      size: 1Gi
      mountPath: /var/www/html/public/uploads
      storageClassName: standard
      accessModes:
        - ReadWriteOnce

# Redis Configuration
redis:
  enabled: true
  host: redis-master
  port: 6379

# Network Policy
networkPolicy:
  enabled: true
  allowedNamespaces:
    - ingress-nginx
    - nginx-system

# Service
service:
  type: ClusterIP
  port: 8000

# Ingress
ingress:
  enabled: true
  className: nginx
  hosts:
    - name: local
      host: suma-ecommerce.local
      tls: true
      tlsSecret: suma-ecommerce-tls
      annotations:
        kubernetes.io/ingress.class: "nginx"
      paths:
        - path: /
          pathType: Prefix
    - name: api
      host: api.suma-honda.id
      tls: true
      tlsSecret: api-suma-honda-id-tls
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/rewrite-target: "/$2"
        nginx.ingress.kubernetes.io/proxy-body-size: "10m"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
      paths:
        - path: /ecommerce(/|$)(.*)
          pathType: ImplementationSpecific

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 50
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60

certificate:
  enabled: true
  certificates:
    - name: suma-ecommerce-local-tls
      secretName: suma-ecommerce-tls
      issuerRef:
        name: selfsigned-cluster-issuer
        kind: ClusterIssuer
      dnsNames:
        - suma-ecommerce.local